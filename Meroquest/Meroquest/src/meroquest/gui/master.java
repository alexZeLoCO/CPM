/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meroquest.gui;

import meroquest.data.EntityHashMap;
import meroquest.tasks.TaskMeroquest;
import meroquest.tasks.GameTaskMeroquest;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;

import meroquest.data.GameSave;

/**
 *
 * @author Rodriguez Lopez, Alejandro // UO281827
 */
public class master extends javax.swing.JFrame {

	/**
	 * Creates new form master
	 */
	public master() {
		initComponents();
		System.out.println("Creando ventana master");
		this.maxEntities = this.SL_Alto.getValue() * this.SL_Ancho.getValue();
		this.updateEntityNumber(this.maxEntities);
		this.SP_Ancho.setValue(this.SL_Ancho.getValue());
		this.SP_Alto.setValue(this.SL_Alto.getValue());
		this.SP_Turnos.setValue(this.SL_Turnos.getValue());
		this.SP_Monstruos.setValue(this.SL_Monstruos.getValue());
		this.SP_Heroes.setValue(this.SL_Heroes.getValue());
		this.entities = new EntityHashMap (8);
		this.vD = new VistaPrevia (this);
		this.JFC = new JFileChooser ();
		this.info = new Info();
		this.TK_Tick.setVisible(false);
		this.vDado = new Dado();
		this.task = new TaskMeroquest(this);	
		this.LB_Detencion.setVisible(false);
		this.gameTask = new GameTaskMeroquest(this);
		this.vPp = new PostPartida();
		this.vPe = new PersonalizarEntidades (this);
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                jTextPane1 = new javax.swing.JTextPane();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jLabel3 = new javax.swing.JLabel();
                jLabel4 = new javax.swing.JLabel();
                SL_Ancho = new javax.swing.JSlider();
                SL_Alto = new javax.swing.JSlider();
                jLabel5 = new javax.swing.JLabel();
                SL_Turnos = new javax.swing.JSlider();
                SP_Ancho = new javax.swing.JSpinner();
                SP_Alto = new javax.swing.JSpinner();
                SP_Turnos = new javax.swing.JSpinner();
                jLabel6 = new javax.swing.JLabel();
                jSeparator1 = new javax.swing.JSeparator();
                jLabel7 = new javax.swing.JLabel();
                jLabel8 = new javax.swing.JLabel();
                SL_Heroes = new javax.swing.JSlider();
                SL_Monstruos = new javax.swing.JSlider();
                SP_Heroes = new javax.swing.JSpinner();
                SP_Monstruos = new javax.swing.JSpinner();
                BT_Personalizar = new javax.swing.JButton();
                BT_Iniciar = new javax.swing.JButton();
                jSeparator2 = new javax.swing.JSeparator();
                BT_Task = new javax.swing.JButton();
                PB_Task = new javax.swing.JProgressBar();
                jLabel9 = new javax.swing.JLabel();
                LB_Task = new javax.swing.JLabel();
                BT_StopTask = new javax.swing.JButton();
                LB_Detencion = new javax.swing.JLabel();
                TK_Tick = new Tick();
                jMenuBar1 = new javax.swing.JMenuBar();
                jMenu1 = new javax.swing.JMenu();
                MI_Abrir = new javax.swing.JMenuItem();
                MI_Guardar = new javax.swing.JMenuItem();
                jSeparator3 = new javax.swing.JPopupMenu.Separator();
                MI_Salir = new javax.swing.JMenuItem();
                jMenu2 = new javax.swing.JMenu();
                MI_VistaPrevia = new javax.swing.JMenuItem();
                jSeparator4 = new javax.swing.JPopupMenu.Separator();
                MI_Color = new javax.swing.JMenuItem();
                jMenu3 = new javax.swing.JMenu();
                MI_Info = new javax.swing.JMenuItem();
                jMenu4 = new javax.swing.JMenu();
                MI_GitHub = new javax.swing.JMenuItem();

                jScrollPane1.setViewportView(jTextPane1);

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("Meroquest");

                jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
                jLabel1.setText("MEROQUEST");

                jLabel2.setText("TABLERO:");

                jLabel3.setText("Ancho:");

                jLabel4.setText("Alto:");

                SL_Ancho.setMaximum(20);
                SL_Ancho.setMinimum(1);
                SL_Ancho.setValue(5);
                SL_Ancho.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SL_AnchoStateChanged(evt);
                        }
                });

                SL_Alto.setMaximum(20);
                SL_Alto.setMinimum(1);
                SL_Alto.setValue(5);
                SL_Alto.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SL_AltoStateChanged(evt);
                        }
                });

                jLabel5.setText("Número de turnos:");

                SL_Turnos.setValue(20);
                SL_Turnos.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SL_TurnosStateChanged(evt);
                        }
                });

                SP_Ancho.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));
                SP_Ancho.setToolTipText("");
                SP_Ancho.setValue(5);
                SP_Ancho.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SP_AnchoStateChanged(evt);
                        }
                });

                SP_Alto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
                SP_Alto.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SP_AltoStateChanged(evt);
                        }
                });

                SP_Turnos.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SP_TurnosStateChanged(evt);
                        }
                });

                jLabel6.setText("ENTIDADES:");

                jLabel7.setText("Héroes:");

                jLabel8.setText("Monstruos:");

                SL_Heroes.setValue(5);
                SL_Heroes.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SL_HeroesStateChanged(evt);
                        }
                });

                SL_Monstruos.setValue(5);
                SL_Monstruos.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SL_MonstruosStateChanged(evt);
                        }
                });

                SP_Heroes.setValue(5);
                SP_Heroes.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SP_HeroesStateChanged(evt);
                        }
                });

                SP_Monstruos.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                SP_MonstruosStateChanged(evt);
                        }
                });

                BT_Personalizar.setText("Personalizar entidades");
                BT_Personalizar.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                BT_PersonalizarActionPerformed(evt);
                        }
                });

                BT_Iniciar.setText("Iniciar");
                BT_Iniciar.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                BT_IniciarActionPerformed(evt);
                        }
                });

                BT_Task.setText("Probabilidades");
                BT_Task.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                BT_TaskActionPerformed(evt);
                        }
                });

                PB_Task.setMaximum(10);

                jLabel9.setText("Iteraciones Restantes:");

                LB_Task.setText("100");
                LB_Task.setEnabled(false);

                BT_StopTask.setText("Detener");
                BT_StopTask.setEnabled(false);
                BT_StopTask.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                BT_StopTaskActionPerformed(evt);
                        }
                });

                LB_Detencion.setText("Orden de detención reconocida. Se detendrá al final de ésta partida.");

                TK_Tick.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                TK_TickMouseReleased(evt);
                        }
                });

                javax.swing.GroupLayout TK_TickLayout = new javax.swing.GroupLayout(TK_Tick);
                TK_Tick.setLayout(TK_TickLayout);
                TK_TickLayout.setHorizontalGroup(
                        TK_TickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 38, Short.MAX_VALUE)
                );
                TK_TickLayout.setVerticalGroup(
                        TK_TickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
                );

                jMenu1.setText("Archivo");

                MI_Abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
                MI_Abrir.setText("Abrir");
                MI_Abrir.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_AbrirActionPerformed(evt);
                        }
                });
                jMenu1.add(MI_Abrir);

                MI_Guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
                MI_Guardar.setText("Guardar");
                MI_Guardar.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_GuardarActionPerformed(evt);
                        }
                });
                jMenu1.add(MI_Guardar);
                jMenu1.add(jSeparator3);

                MI_Salir.setText("Salir");
                MI_Salir.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_SalirActionPerformed(evt);
                        }
                });
                jMenu1.add(MI_Salir);

                jMenuBar1.add(jMenu1);

                jMenu2.setText("Opciones");

                MI_VistaPrevia.setText("Vista Previa");
                MI_VistaPrevia.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_VistaPreviaActionPerformed(evt);
                        }
                });
                jMenu2.add(MI_VistaPrevia);
                jMenu2.add(jSeparator4);

                MI_Color.setText("Color");
                MI_Color.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_ColorActionPerformed(evt);
                        }
                });
                jMenu2.add(MI_Color);

                jMenuBar1.add(jMenu2);

                jMenu3.setText("Ayuda");

                MI_Info.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
                MI_Info.setText("Información");
                MI_Info.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_InfoActionPerformed(evt);
                        }
                });
                jMenu3.add(MI_Info);

                jMenu4.setText("Código");

                MI_GitHub.setText("GitHub");
                MI_GitHub.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                MI_GitHubActionPerformed(evt);
                        }
                });
                jMenu4.add(MI_GitHub);

                jMenu3.add(jMenu4);

                jMenuBar1.add(jMenu3);

                setJMenuBar(jMenuBar1);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(BT_Personalizar)
                                                .addGap(18, 18, 18)
                                                .addComponent(TK_Tick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel8)
                                                        .addComponent(jLabel7))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(SL_Monstruos, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(SP_Monstruos))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(SL_Heroes, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(SP_Heroes, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BT_Iniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(jLabel3)
                                                                                .addComponent(jLabel4)
                                                                                .addComponent(jLabel5))
                                                                        .addComponent(jLabel6))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(SL_Alto, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                                                                        .addComponent(SL_Ancho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(SP_Ancho, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                                                                        .addComponent(SP_Alto)))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(SL_Turnos, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(SP_Turnos, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))))
                                                        .addComponent(jLabel2))
                                                .addGap(11, 11, 11))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 6, Short.MAX_VALUE)
                                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jSeparator2)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(BT_StopTask, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(PB_Task, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(BT_Task, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel9)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(LB_Task)
                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                        .addComponent(LB_Detencion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(SL_Ancho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SP_Ancho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(SL_Alto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SP_Alto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(SL_Turnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SP_Turnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(SL_Heroes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SP_Heroes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(SL_Monstruos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SP_Monstruos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(TK_Tick, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BT_Personalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BT_Task)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PB_Task, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(LB_Task))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BT_StopTask)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LB_Detencion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addComponent(BT_Iniciar)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

	/**
	 * Retorna el máximo número de entidades.
	 * 
	 * @deprecated
	 * El resto de clases han sido independizadas de este método.
	 * 
	 * @return Máximo número de entidades.
	 */
	@Deprecated
	public int getMaxEntities () {
		return this.maxEntities;
	}

	/**
	 * Retorna el máximo número de monstruos.
	 * 
	 * @deprecated
	 * El resto de clases han sido independizadas de este método.
	 * 
	 * @return Máximo número de monstruos.
	 */
	@Deprecated
	public int getMaxMonstruos () {
		return this.SL_Monstruos.getValue(); 
	}

	/**
	 * Retorna el máximo número de héroes.
	 * 
	 * @deprecated 
	 * El resto de clases han sido independizadas de este método.
	 * 
	 * @return Máximo número de héroes.
	 */
	@Deprecated
	public int getMaxHeroes () {
		return this.SL_Heroes.getValue();
	}

	/**
	 * Retorna la tabla Hash de Entidades actual.
	 * 
	 * @return EntityHashMap actual.
	 */
	public EntityHashMap getEntities () {
		return this.entities;
	}

	/**
	 * Asigna la tabla Hash de Entidades actual a una dada.
	 * 
	 * @param e Tabla Hash de Entidades.
	 */
	public void setEntities (EntityHashMap e) {
		System.out.println("Asignando entidades");
		this.entities = new EntityHashMap (e);
	}

	/**
	 * Se ha pulsado el botón de personalización de entidades.
	 * 
	 * @param evt 
	 */
        private void BT_PersonalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_PersonalizarActionPerformed
                // TODO add your handling code here:
	System.out.println("Abriendo personalizacion");
	this.vPe.setVisible(true);
        }//GEN-LAST:event_BT_PersonalizarActionPerformed

	/**
	 * Se ha modificado el Slider de Monstruos.
	 * 
	 * @param evt 
	 */
        private void SL_MonstruosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SL_MonstruosStateChanged
                // TODO add your handling code here:
	System.out.println("Slider: Modificando cantidad de monstruos");
	if (Integer.parseInt(this.SP_Monstruos.getValue().toString()) != this.SL_Monstruos.getValue()) {
		this.SP_Monstruos.setValue(this.SL_Monstruos.getValue());
	}
	this.updateEntityNumber(this.maxEntities);
	if (this.vPe != null) {
		this.vPe.setLimites(this.SL_Heroes.getValue(), this.SL_Monstruos.getValue());
	}
        }//GEN-LAST:event_SL_MonstruosStateChanged

	/**
	 * Se ha modificado el Spinner de Monstruos.
	 * 
	 * @param evt 
	 */
        private void SP_MonstruosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SP_MonstruosStateChanged
                // TODO add your handling code here:
	System.out.println("Spinner: Modificando cantidad de monstruos");
	if (Integer.parseInt(this.SP_Monstruos.getValue().toString()) < 0) { 
		this.SP_Monstruos.setValue(0);
	}
	if (Integer.parseInt(this.SP_Monstruos.getValue().toString()) > this.SL_Monstruos.getMaximum()) {
		this.SP_Monstruos.setValue(this.SL_Monstruos.getMaximum());
	}
	if (Integer.parseInt(this.SP_Monstruos.getValue().toString()) != this.SL_Monstruos.getValue()) {
		this.SL_Monstruos.setValue(Integer.parseInt(this.SP_Monstruos.getValue().toString()));
	}
        }//GEN-LAST:event_SP_MonstruosStateChanged

	/**
	 * Se ha modificado el Slider de Héroes.
	 * 
	 * @param evt 
	 */
        private void SL_HeroesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SL_HeroesStateChanged
                // TODO add your handling code here:
	System.out.println("Slider: Modificando cantidad de heroes");
	if (Integer.parseInt(this.SP_Heroes.getValue().toString()) != this.SL_Heroes.getValue()) {
		this.SP_Heroes.setValue(this.SL_Heroes.getValue());
	}
	this.updateEntityNumber(this.maxEntities);
	if (this.vPe != null) {
		this.vPe.setLimites(this.SL_Heroes.getValue(), this.SL_Monstruos.getValue());
	}
        }//GEN-LAST:event_SL_HeroesStateChanged

	/**
	 * Se ha modificado el Spinner de Héroes.
	 * 
	 * @param evt 
	 */
        private void SP_HeroesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SP_HeroesStateChanged
                // TODO add your handling code here:
	System.out.println("Spinner: Modificando cantidad de Heroes");
	if (Integer.parseInt(this.SP_Heroes.getValue().toString()) < 0) { 
		this.SP_Heroes.setValue(0);
	}
	if (Integer.parseInt(this.SP_Monstruos.getValue().toString()) > this.SL_Heroes.getMaximum()) {
		this.SP_Heroes.setValue(this.SL_Heroes.getMaximum());
	}
	if (Integer.parseInt(this.SP_Heroes.getValue().toString()) != this.SL_Heroes.getValue()) {
		this.SL_Heroes.setValue(Integer.parseInt(this.SP_Heroes.getValue().toString()));
	}
        }//GEN-LAST:event_SP_HeroesStateChanged

	/**
	 * Se ha modificado el Slider de Turnos.
	 * 
	 * @param evt 
	 */
        private void SL_TurnosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SL_TurnosStateChanged
                // TODO add your handling code here:
	System.out.println("Slider: Modificando cantidad de turnos");
	if (Integer.parseInt(this.SP_Turnos.getValue().toString()) != this.SL_Turnos.getValue()) {
		this.SP_Turnos.setValue(this.SL_Turnos.getValue());
	}
        }//GEN-LAST:event_SL_TurnosStateChanged

	/**
	 * Se ha modificado el Spinner de Turnos.
	 * 
	 * @param evt 
	 */
        private void SP_TurnosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SP_TurnosStateChanged
                // TODO add your handling code here:
	System.out.println("Spinner: Modificando cantidad de turnos");
	if (Integer.parseInt(this.SP_Turnos.getValue().toString()) < 0) { 
		this.SP_Turnos.setValue(0);
	}
	if (Integer.parseInt(this.SP_Turnos.getValue().toString()) > this.SL_Turnos.getMaximum()) {
		this.SP_Turnos.setValue(this.SL_Turnos.getMaximum());
	}
	if (Integer.parseInt(this.SP_Turnos.getValue().toString()) != this.SL_Turnos.getValue()) {
		this.SL_Turnos.setValue(Integer.parseInt(this.SP_Turnos.getValue().toString()));
	}
        }//GEN-LAST:event_SP_TurnosStateChanged

	/**
	 * Se ha modificado el Slider del número de filas (alto).
	 * 
	 * @param evt 
	 */
        private void SL_AltoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SL_AltoStateChanged
                // TODO add your handling code here:
	System.out.println("Slider: Modificando cantidad de filas");
	if (Integer.parseInt(this.SP_Alto.getValue().toString()) != this.SL_Alto.getValue()) {
		this.SP_Alto.setValue(this.SL_Alto.getValue());
	}
	this.maxEntities = this.SL_Alto.getValue() * this.SL_Ancho.getValue();
	this.updateEntityNumber(this.maxEntities);
        }//GEN-LAST:event_SL_AltoStateChanged

	/**
	 * Se ha modificado el Spinner de filas (Alto).
	 * 
	 * @param evt 
	 */
        private void SP_AltoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SP_AltoStateChanged
                // TODO add your handling code here:
	System.out.println("Spinner: Modificando cantidad de filas");
	if (Integer.parseInt(this.SP_Alto.getValue().toString()) < 0) { 
		this.SP_Alto.setValue(0);
	}
	if (Integer.parseInt(this.SP_Alto.getValue().toString()) > this.SL_Alto.getMaximum()) {
		this.SP_Alto.setValue(this.SL_Alto.getMaximum());
	}
	if (Integer.parseInt(this.SP_Alto.getValue().toString()) != this.SL_Alto.getValue()) {
		this.SL_Alto.setValue(Integer.parseInt(this.SP_Alto.getValue().toString()));
	}
        }//GEN-LAST:event_SP_AltoStateChanged

	/**
	 * Se ha modificado el Slider de columnas (Ancho)
	 * 
	 * @param evt 
	 */
        private void SL_AnchoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SL_AnchoStateChanged
                // TODO add your handling code here:
	System.out.println("Slider: Modificando cantidad de columnas");
	if (Integer.parseInt(this.SP_Ancho.getValue().toString()) != this.SL_Ancho.getValue()) {
		this.SP_Ancho.setValue(this.SL_Ancho.getValue());
	}
	this.maxEntities = this.SL_Alto.getValue() * this.SL_Ancho.getValue();
	this.updateEntityNumber(this.maxEntities);
        }//GEN-LAST:event_SL_AnchoStateChanged

	/**
	 * Se ha modificado el Spinner de columnas (Ancho).
	 * 
	 * @param evt 
	 */
        private void SP_AnchoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SP_AnchoStateChanged
                // TODO add your handling code here:
	System.out.println("Spinner: Modificando cantidad de columnas");
	if (Integer.parseInt(this.SP_Ancho.getValue().toString()) < 0) { 
		this.SP_Ancho.setValue(0);
	}
	if (Integer.parseInt(this.SP_Ancho.getValue().toString()) > this.SL_Ancho.getMaximum()) {
		this.SP_Ancho.setValue(this.SL_Ancho.getMaximum());
	}
	if (Integer.parseInt(this.SP_Ancho.getValue().toString()) != this.SL_Ancho.getValue()) {
		this.SL_Ancho.setValue(Integer.parseInt(this.SP_Ancho.getValue().toString()));
	}
        }//GEN-LAST:event_SP_AnchoStateChanged

	/**
	 * Se ha pulsado el botón de vista previa.
	 * 
	 * @param evt 
	 */
        private void MI_VistaPreviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_VistaPreviaActionPerformed
                // TODO add your handling code here:
	System.out.println("Mostrando Vista previa");
	this.vD.setVisible(true);
        }//GEN-LAST:event_MI_VistaPreviaActionPerformed

	/**
	 * Se ha pulsado el botón de guardar imagen de partida.
	 * 
	 * @param evt 
	 */
        private void MI_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_GuardarActionPerformed
                // TODO add your handling code here:
	System.out.println("Guardando opciones");
	if (this.JFC.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
		try {
			new ObjectOutputStream(new FileOutputStream(this.JFC.getSelectedFile().getAbsolutePath())).writeObject(new GameSave (this.SL_Heroes.getValue(), this.SL_Monstruos.getValue(), this.SL_Alto.getValue(), this.SL_Ancho.getValue(), this.SL_Turnos.getValue(), this.entities));
		} catch (IOException ex) {
			Logger.getLogger(master.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
        }//GEN-LAST:event_MI_GuardarActionPerformed

	/**
	 * Se ha pulsado el botón de abrir imagen de partida.
	 * 
	 * @param evt 
	 */
        private void MI_AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_AbrirActionPerformed
                // TODO add your handling code here:
	System.out.println("Abriendo opciones");
	if (this.JFC.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
		try {
			GameSave gs = new GameSave ((GameSave) new ObjectInputStream (new FileInputStream(this.JFC.getSelectedFile().getAbsolutePath())).readObject());
			this.setEntities(gs.getEntities());
			this.SL_Heroes.setValue(gs.getHeroes());
			this.SL_Monstruos.setValue(gs.getMonsters());
			this.SL_Alto.setValue(gs.getRows());
			this.SL_Ancho.setValue(gs.getCols());
			this.SL_Turnos.setValue(gs.getTurns());
			this.TK_Tick.setVisible(true);
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(master.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
        }//GEN-LAST:event_MI_AbrirActionPerformed

	/**
	 * Se ha pulsado el botón de información
	 * 
	 * @param evt 
	 */
        private void MI_InfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_InfoActionPerformed
                // TODO add your handling code here:
	System.out.println("Mostrando información");
	this.info.setVisible(true);	
        }//GEN-LAST:event_MI_InfoActionPerformed

	/**
	 * Se ha pulsado el botón de Iniciar partida.
	 * 
	 * @param evt 
	 */
        private void BT_IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_IniciarActionPerformed
                // TODO add your handling code here:
	System.out.println("Iniciando Juego");
	this.vDado.showDialog();
	if (this.vDado.isOk()) {
		this.gameTask.setAll(this.SL_Heroes.getValue(), this.SL_Monstruos.getValue(), this.SL_Alto.getValue(), this.SL_Ancho.getValue(), this.SL_Turnos.getValue(), this.vDado.getDado(), this.entities);
		this.gameThread = new Thread () {
			@Override
			public void run () {
				master.this.gameTask.run();
			}
		};
		this.gameThread.start();
	}
        }//GEN-LAST:event_BT_IniciarActionPerformed

	/**
	 * Se ha pulsado el botón de calcular probabilidades (tarea)
	 * 
	 * @param evt 
	 */
        private void BT_TaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_TaskActionPerformed
                // TODO add your handling code here:
	System.out.println("Iniciando tarea");
	this.task.setCols(this.SL_Ancho.getValue());
	this.task.setRows(this.SL_Alto.getValue());
	this.task.setMonsters(this.SL_Monstruos.getValue());
	this.task.setHeroes(this.SL_Heroes.getValue());
	this.task.setTurns(this.SL_Turnos.getValue());
	this.task.setStruct(this.entities);

	this.hiloBack = new Thread () {
		@Override
		public void run () {
			master.this.task.run();
		}
	};

	this.hiloBack.start();
        }//GEN-LAST:event_BT_TaskActionPerformed

	/**
	 * Se ha pulsado el botón de detener cálculo de probabilidades (tarea)
	 * 
	 * @param evt 
	 */
        private void BT_StopTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_StopTaskActionPerformed
                // TODO add your handling code here:
	System.out.println("Deteniendo tarea");
	this.LB_Detencion.setVisible(true);
	this.task.setStop();
        }//GEN-LAST:event_BT_StopTaskActionPerformed

	/**
	 * Se ha pulsado el Tick.
	 * 
	 * @param evt 
	 */
        private void TK_TickMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TK_TickMouseReleased
                // TODO add your handling code here:
	System.out.println("Tick reconocido");
	if (this.ticks-- == 0) {
		System.out.println("Modificando tick");
		((Tick)this.TK_Tick).switchDrawing();
		this.ticks = 10;
		this.TK_Tick.repaint();
	}	
        }//GEN-LAST:event_TK_TickMouseReleased

	/**
	 * Se ha pulsado el botón de cambio de color de Tick.
	 * 
	 * @param evt 
	 */
        private void MI_ColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_ColorActionPerformed
                // TODO add your handling code here:
	System.out.println("Modificando color");
	((Tick)this.TK_Tick).setColor(JColorChooser.showDialog(null, "Seleccione color", ((Tick)this.TK_Tick).getColor()));
	((Tick)this.TK_Tick).repaint();
        }//GEN-LAST:event_MI_ColorActionPerformed

        private void MI_GitHubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_GitHubActionPerformed
		try {
			// TODO add your handling code here:
			java.awt.Desktop.getDesktop().browse(new java.net.URI("https://github.com/alexZeLoCO/CPM/tree/main/Meroquest/Meroquest"));
		} catch (URISyntaxException | IOException ex) {
			Logger.getLogger(master.class.getName()).log(Level.SEVERE, null, ex);
		}
        }//GEN-LAST:event_MI_GitHubActionPerformed

	/**
	 * Se ha pulsado el botón de salir
	 * 
	 * @param evt 
	 */
        private void MI_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MI_SalirActionPerformed
                // TODO add your handling code here:
		System.out.println("Saliendo");
		System.exit(0);
        }//GEN-LAST:event_MI_SalirActionPerformed

	/**
	 * Actualiza el número de entidades.
	 * 
	 * @param maxEntities Número máximo de entidades.
	 */
	private void updateEntityNumber (int maxEntities) {
		System.out.println("Modificando numero de entidades");
		this.SL_Monstruos.setMaximum(maxEntities);
		this.SL_Monstruos.setValue(Math.min(this.SL_Monstruos.getValue(), this.SL_Monstruos.getMaximum()));
		this.SL_Heroes.setMaximum(this.maxEntities - this.SL_Monstruos.getValue());
		this.SL_Heroes.setValue(Math.min(this.SL_Heroes.getValue(), this.SL_Heroes.getMaximum()));
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(master.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new master().setVisible(true);
			}
		});
	}

	private int maxEntities;
	PersonalizarEntidades vPe;
	VistaPrevia vD;
	Info info;
	Dado vDado;
	private EntityHashMap entities;
	private final JFileChooser JFC;
	
	TaskMeroquest task;
	Thread hiloBack;
	
	GameTaskMeroquest gameTask;
	Thread gameThread;

	public PostPartida vPp;

	private int ticks = 10;
        // Variables declaration - do not modify//GEN-BEGIN:variables
        public javax.swing.JButton BT_Iniciar;
        javax.swing.JButton BT_Personalizar;
        public javax.swing.JButton BT_StopTask;
        public javax.swing.JButton BT_Task;
        public javax.swing.JLabel LB_Detencion;
        public javax.swing.JLabel LB_Task;
        javax.swing.JMenuItem MI_Abrir;
        javax.swing.JMenuItem MI_Color;
        javax.swing.JMenuItem MI_GitHub;
        javax.swing.JMenuItem MI_Guardar;
        javax.swing.JMenuItem MI_Info;
        javax.swing.JMenuItem MI_Salir;
        javax.swing.JMenuItem MI_VistaPrevia;
        public javax.swing.JProgressBar PB_Task;
        javax.swing.JSlider SL_Alto;
        javax.swing.JSlider SL_Ancho;
        javax.swing.JSlider SL_Heroes;
        javax.swing.JSlider SL_Monstruos;
        javax.swing.JSlider SL_Turnos;
        javax.swing.JSpinner SP_Alto;
        javax.swing.JSpinner SP_Ancho;
        javax.swing.JSpinner SP_Heroes;
        javax.swing.JSpinner SP_Monstruos;
        javax.swing.JSpinner SP_Turnos;
        javax.swing.JPanel TK_Tick;
        javax.swing.JLabel jLabel1;
        javax.swing.JLabel jLabel2;
        javax.swing.JLabel jLabel3;
        javax.swing.JLabel jLabel4;
        javax.swing.JLabel jLabel5;
        javax.swing.JLabel jLabel6;
        javax.swing.JLabel jLabel7;
        javax.swing.JLabel jLabel8;
        javax.swing.JLabel jLabel9;
        javax.swing.JMenu jMenu1;
        javax.swing.JMenu jMenu2;
        javax.swing.JMenu jMenu3;
        javax.swing.JMenu jMenu4;
        javax.swing.JMenuBar jMenuBar1;
        javax.swing.JScrollPane jScrollPane1;
        javax.swing.JSeparator jSeparator1;
        javax.swing.JSeparator jSeparator2;
        javax.swing.JPopupMenu.Separator jSeparator3;
        javax.swing.JPopupMenu.Separator jSeparator4;
        javax.swing.JTextPane jTextPane1;
        // End of variables declaration//GEN-END:variables
}
